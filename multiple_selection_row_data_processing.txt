======HTML====== 
<button type="button" id="delete_btn" class="btn btn-danger btn_delete" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Click to delete" disabled>
 <i data-feather="trash" class="me-60"></i>
</button>
	   
<thead>
    <tr>   
        <th>
        <div class="form-check d-inline">
            <input class="form-check-input" type="checkbox" id="selectAll" style="margin-left: -0.785rem;" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Select all">
        </div>                                                
        </th>
    </tr>
</thead>
<tbody>
    {% for i in expertslist %}
    <tr id="{{i.id}}" style="cursor:move;">
        <td>
        <form action="#" method="post">
            <div class="form-check d-inline">
            {% csrf_token %}
            <input class="form-check-input" type="checkbox" name="getselectedval" style="margin-left: -0.785rem;" value="{{i.id}}" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Select to delete">
            </div>
        </form>
        </td>
    </tr>
    {% endfor %}
</tbody>

======JS====== 
// START: onclick delete data 
$('#delete_btn').click(function(){
    var id =[];
    var csrf = $('input[name=csrfmiddlewaretoken]').val();
    $('input[name=getselectedval]:checkbox:checked').each(function(i){
        id[i]=$(this).val()
    })
    if(id.length===0){
        Swal.fire({
          position: 'top-end',
          icon: 'error',
          title: 'please select an item',
          showConfirmButton: false,
          timer: 500
        });
    }else{
        Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url:"{% url 'echobuddy_expert_delete' %}",
                method:"POST",
                data:{
                    id,
                    csrfmiddlewaretoken:csrf
                },
                success: function (data) {
                    if(data.status===true){
                        d_icon = 'success'
                    }else{
                        d_icon = 'error'
                    }
                    Swal.fire({
                    position: 'top-end',
                    icon: d_icon,
                    title: data.message,
                    showConfirmButton: false,
                    timer: 500
                    });
                    setTimeout(() => {location.reload();}, 500);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    Swal.fire({
                    position: 'top-end',
                    icon: 'error',
                    title: 'unable to delete',
                    showConfirmButton: false,
                    timer: 500
                    });
                    setTimeout(() => {location.reload();}, 500);
                }
            })                   
        }
        })                    
    }
})
// END: onclick delete data  

======URLS.PY====== 
path('echobuddy_expert_delete/',views.echobuddy_expert_delete,name="echobuddy_expert_delete"),

======VIEWS.PY====== 
def echobuddy_expert_delete(request):
    if request.method == "POST":
        try:
            expertsids = request.POST.getlist('id[]')
            echoapp_experts_instances = echoapp_experts.objects.filter(pk__in=expertsids)
            for echoapp_experts_instance in echoapp_experts_instances:
                url = echoapp_experts_instance.avatar
                components = url.split('/')
                filename = components[-1]
                if filename.endswith('.png'):
                    bucket_name = echobuddy_expert_bucket_name
                    key_name = f"{echobuddy_expert_s3_obj_key}{filename}"
                    # FUNCTION TO DELETE A FILE FROM AWS S3 BUCKET
                    delete_file_using_client(bucket_name, key_name) 
                    echoapp_experts_instance.delete()
            response = JsonResponse({'status': True, 'message': 'Deleted successfully'})
            return response
        except Exception as e:
            response = JsonResponse({'status': False, 'message': str(e)})
            return response 
